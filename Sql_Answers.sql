SELECT DATE(PUBLISH) AS REPT_DATE, COUNT(1) AS TOTAL_ACTIVE FROM TIGER.ADS 
WHERE PUBLISH IN (
             SELECT GENERATE_SERIES(START_DATE, END_DATE
                         , '1 DAY'::INTERVAL) AS REPORTDATE
						 FROM(SELECT MIN(PUBLISH) AS START_DATE, MAX(PUBLISH) AS END_DATE FROM TIGER.ADS) AS A)
AND DELETE IS NULL GROUP BY DATE(PUBLISH) 
ORDER BY DATE(PUBLISH);--THE BELOW QUERY WILL REPORT THE ACTIVE ADS ONLY FOR THOSE AVAILABLE PUBLISH DATES

 SELECT A.TS, COUNT(B.PUBLISH) AS ACTIVE_ADS FROM
  (SELECT TO_CHAR(GENERATE_SERIES(MIN(PUBLISH)
                     , MAX(PUBLISH)
                     , INTERVAL '1 DAY'),'YYYY-MM-DD') AS TS
FROM   ADS) A 
LEFT OUTER JOIN ADS B ON A.TS = TO_CHAR(B.PUBLISH,'YYYY-MM-DD')
AND B.DELETE IS NULL
GROUP BY A.TS
ORDER BY A.TS;--THIS QUERY WILL GENERATE SERIES OF DATES BETWEEN MINIMUM AND MAXIMUM OF PUBLISH DATE AND REPORT ACTIVE ADS IF AVAILABLE AND REPORT 0 IF NO ACTIVE ADS PRESENT


WITH FIRST_SQL AS (SELECT DATE_TRUNC('YEAR', "create") AS YEAR, COUNT("create") AS TOTAL_ADS
FROM ADS A INNER JOIN CATEGORY B
ON A.CATEGORY_ID = B.ID
INNER JOIN REGION C 
ON A.REGION_ID = C.ID 
WHERE DATE_TRUNC('YEAR', A.create)::VARCHAR(4) IN ('2016','2017')
AND C.COUNTY = 'Tipperary'
AND B.SUBSUBCATEGORY = 'Beef Cattle'
GROUP BY YEAR 
ORDER BY YEAR)
SELECT DATE_TRUNC('YEAR',FIRST_SQL.YEAR)::VARCHAR(4) AS ADS_YEAR,TOTAL_ADS, COALESCE((TOTAL_ADS - LAG(TOTAL_ADS,1) OVER ( ORDER BY YEAR)),0) AS YOY FROM FIRST_SQL